#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# ============================================================================
# fap4malware - File analyzation program to detect malware
# Malware definition list
# Copyright (C) 2018 by Ralf Kilian
# Distributed under the MIT License (https://opensource.org/licenses/MIT)
#
# GitHub: https://github.com/urbanware-org/fap4malware
# GitHub: https://gitlab.com/urbanware-org/fap4malware
# ============================================================================

DEFLIST = {

    # This is the global definition list that contains the fingerprints of the
    # malicious files in the form of SHA256 hashes. The list contains some
    # pre-defined fingerprints:

    "6eb9f90ae2cfe10f0364729298351eb2afba298a6c8b36b47483785b78a87c4e":
    "Test file included with 'fap4malware'",

    "275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f":
    "EICAR test signature",

    # Instead of manually adding the hashes for the compressed variants, it
    # would make more sense to add some code to the main script that processes
    # archive files.

    "2546dcffc5ad854d4ddc64fbf056871cd5a00f2471cb7a5bfd4ac23b6e9eedad":
    "EICAR test signature (zipped)",

    "e1105070ba828007508566e28a2b8d4c65d192e9eaf3b7868382b7cae747b397":
    "EICAR test signature (double zipped)",

    # In order to add a new definition, for example from the file 'virus.exe',
    # create its fingerprint first.
    #
    # On Linux you can simply do that using the 'sha256sum' tool as follows:
    #
    #   sha256sum virus.exe | awk '{ print $1 }'
    #
    # Of course, you can also execute that command without piping its output
    # to 'awk' and just copy the SHA256 hash.
    #
    # Copy the returned SHA256 hash and add it to this list along with the
    # name (or description) of the malware:
    #
    #   "6eb9f90ae2cfe10f0364729298351eb2afba298a6c8b36b47483785b78a87c4e":
    #   "Win32.Trojan.Foo.Bar",

}

# EOF
